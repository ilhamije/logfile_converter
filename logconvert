#!/usr/bin/env python3

import os
import argparse
import shutil
import sys

sys.tracebacklimit = 0


def main(args):
    """
    CONVERSION
    Get file path, parse it into path and filename.
    STORING
    Store as new_filename
    Copy into GIVEN directory
    """
    src_dir = os.getcwd()
    args_dict = vars(args)

    if args_dict['output']:
        dest_dir = args_dict['output']
    else:
        dest_dir = src_dir

    filename = args_dict['file'].name
    pre, ext = os.path.splitext(filename)
    a_target = args_dict['target']
    a_output = args_dict['output']

    do_convert(filename, pre, a_target, a_output, dest_dir)


def parse_args():
    """
    Parse the given arguments.
    Flag -t or --target : Define target format
    Default : TEXT
    Flag -o or --output : Define output file (and location)
    Default directory: Same directory as source file.
    Deefault file: *.txt
    """
    p = argparse.ArgumentParser()
    p.add_argument('file',
                    type=file_check(argparse.FileType(mode="r")),
                    help='*.log file only')
    p.add_argument('-t', '--target',
                    help='select format target <json|text>',
                    choices=['text', 'json'])
    p.add_argument('-o', '--output',
                    help='define output file',
                    type=argparse.FileType(mode="w"))
    args = p.parse_args()
    return args


def do_convert(filename, pre, a_target, a_output, dest_dir):
    """
    Converting and copying result into destination directory (dist_dir).
    Based on Use Cases.
    """
    try:
        if a_target:
            if a_output:
                if a_target.lower() == 'json':
                    if a_output.name.lower().endswith('txt'):
                        raise ValueError("Target and Extension didn't match.")
                    else:
                        dest_file = a_output.name
                else:
                    if a_output.name.lower().endswith('json'):
                        raise ValueError("Target and Extension didn't match.")
                    else:
                        dest_file = dest_dir.name
            else:
                if a_target.lower() == 'json':
                    dest_file = dest_dir + '/' + pre + '.json'
                else:
                    dest_file = dest_dir + '/' + pre + '.txt'

        else:
            # target is None
            # so target is TEXT as default
            if a_output:
                if a_output.name.lower().endswith('json'):
                    raise ValueError("Using default target (TEXT). But extension didn't matched.")
                else:
                    dest_file = dest_dir.name
            else:
                dest_file = dest_dir + '/' + pre + '.txt'
    except Exception as e:
        print(e)
    else:
        shutil.copy(filename, dest_file)


def file_check(opener):
    """ Check if input file is *.log """
    def ext_check(filename):
        if not filename.lower().endswith('log'):
            raise ValueError('*.log file only')
        return opener(filename)
    return ext_check


if __name__ == '__main__':
    args = parse_args()
    main(args)
